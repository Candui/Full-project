stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

# Сборка бэкенда
build_backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Building backend..."
    - docker build -t my-backend ./backend
    - docker images  # Выводим список собранных изображений

# Сборка фронтенда
build_frontend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Building frontend..."
    - docker build -t my-frontend ./frontend
    - docker images  # Выводим список собранных изображений

# Проверка (этап тестов, но мы просто убедимся, что пайплайн работает)
test_backend:
  stage: test
  image: python:3.10
  script:
    - echo "Testing backend (проверка работы пайплайна)"
    - cd backend
    - pip install -r requirements.txt
    - echo "Backend test stage complete"

test_frontend:
  stage: test
  image: node:20
  script:
    - echo "Testing frontend (проверка работы пайплайна)"
    - cd frontend
    - npm ci
    - echo "Frontend test stage complete"

# Деплой на сервер
deploy:
  stage: deploy
  script:
    
    - mkdir -p ~/.ssh
    # Добавляем приватный ключ для SSH
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    # Добавляем сервер в known_hosts
    - ssh-keyscan -t ed25519 "$DEPLOY_SERVER_IP" >> ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts
    # Деплой через SSH
    - echo "Deploying to server..."
    - ssh -i ~/.ssh/id_ed25519 user1@$DEPLOY_SERVER_IP "cd /home/user1/app && git pull && echo 'Deployment successful at $(date)' > /home/user1/app/deploy_success.txt"

